{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "adminUsername": {
        "type": "string",
        "metadata": {
          "description": "Username for the Virtual Machine."
        }
      },
      "adminPassword": {
        "type": "securestring",
        "minLength": 12,
        "metadata": {
          "description": "Password for the Virtual Machine."
        }
      },
       "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "The location of resources, such as templates and DSC modules, that the template depends on"
            },
            "defaultValue": "[deployment().properties.templateLink.uri]"
        },
      "dnsLabelPrefix": {
        "type": "string",
        "defaultValue": "[toLower(concat(parameters('vmName'),'-', uniqueString(resourceGroup().id, parameters('vmName'))))]",
        "metadata": {
          "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
        }
      },
      "publicIpName": {
        "type": "string",
        "defaultValue": "[toLower(concat(parameters('vmName'),uniqueString(resourceGroup().id)))]",
        "metadata": {
          "description": "Name for the Public IP used to access the Virtual Machine."
        }
      },
      "publicIPAllocationMethod": {
        "type": "string",
        "defaultValue": "Static",
         "allowedValues": [
        "Dynamic",
        "Static"
      ],
        "metadata": {
          "description": "Allocation method for the Public IP used to access the Virtual Machine."
        }
      },
      "publicIpSku": {
        "type": "string",
        "defaultValue": "Basic",
        "allowedValues": [
            "Basic",
            "Standard"
        ],
        "metadata": {
          "description": "SKU for the Public IP used to access the Virtual Machine."
        }
      },
      "privateIPAddress": {
      "type": "string",
      "defaultValue": "10.0.0.4",
        "allowedValues": [
        "10.0.0.4",  
        "10.0.0.5",
        "10.0.0.6",
        "10.0.0.7",
        "10.0.0.8",
        "10.0.0.9",
        "10.0.0.10"
        ],
      "metadata": {
        "description": "Private IP Address for the DNS Server"
      }
    },
  
      "OSVersion": {
        "type": "string",
        "defaultValue": "2019-Datacenter",
        "allowedValues": [
            "2008-R2-SP1",
            "2012-Datacenter",
            "2012-R2-Datacenter",
            "2016-Nano-Server",
            "2016-Datacenter-with-Containers",
            "2016-Datacenter",
            "2019-Datacenter",
            "2019-Datacenter-Core",
            "2019-Datacenter-Core-smalldisk",
            "2019-Datacenter-Core-with-Containers",
            "2019-Datacenter-Core-with-Containers-smalldisk",
            "2019-Datacenter-smalldisk",
            "2019-Datacenter-with-Containers",
            "2019-Datacenter-with-Containers-smalldisk"
        ],
        "metadata": {
          "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version."
        }
      },
      "vmSize": {
        "type": "string",
        "defaultValue": "Standard_B2s",
        "allowedValues": [
            "Standard_B1s",
            "Standard_B2s",
            "Standard_B1ms",
            "Standard_B2ms",
            "Standard_B4ms"
        ],
        "metadata": {
          "description": "Size of the virtual machine."
        }
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "allowedValues": [
            "westeurope",
            "easteurope",
            "uswest"
        ],
        "metadata": {
          "description": "Location for all resources."
        }
      },
      "vmName": {
        "type": "string",
        "defaultValue": "[toLower(concat(parameters('adminUsername'),'-sv1-vm'))]",
        "metadata": {
          "description": "Name of the virtual machine."
        }
      },
  
      
    
    "subnetRef": {
        "type": "string",
        "defaultValue": 
            "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetName'))]",
    
        "metadata": {
            "description": "The SubnetRef for Nic"
        }
    },

    "nicName": {
        "type": "string",
        "defaultValue":"[toLower(concat(parameters('adminUsername'),'-nic'))]",
        "metadata": {
            "description": "Name of the nic"
        }
    },
    "virtualNetworkName": {
        "type": "string",
        "defaultValue":"[toLower(concat(parameters('adminUsername'),'-vnet'))]",
        "metadata": {
          "description": "The name of the Virtual Network to Create"
        }
      },
    "virtualNetworkAddressRange": {
        "type": "string",
        "defaultValue": "10.0.0.0/16",
        "metadata": {
          "description": "The address range of the new VNET in CIDR format"
        }
      },
    "subnetName": {
        "type": "string",
        "defaultValue": "[toLower(concat(parameters('adminUsername'),'-sub'))]",
        "metadata": {
          "description": "The name of the subnet created in the new VNET"
        }
      },
    "subnetRange": {
        "type": "string",
        "defaultValue": "10.0.0.0/24",
        "metadata": {
          "description": "The address range of the subnet created in the new VNET"
        }
      },
    
    "networkSecurityGroupName" : {
            "type": "string",
            "defaultValue": "[toLower(concat(parameters('adminUsername'),'-nsg'))]",
            "metadata": {
                "description": "Name of the NSG"
            }
        },
    "resourceTags": {
      "type": "object",
      "defaultValue": {
        "Owner": "Jan"
      }
    }
      
    
},
"variables": {
  "templateBaseUrl": "https://raw.githubusercontent.com/MrIsaac42/templateTest/main/linked/",
  "vmTemplateUrl": "[uri(parameters('_artifactsLocation'), 'linked/deployVM.json')]",
  "nsgTemplateUrl": "[uri(parameters('_artifactsLocation'), 'linked/nsg.json')]",
  "vnetTemplateUrl": "[uri(parameters('_artifactsLocation'), 'linked/vnet.json')]"
},

   
  
"resources": [   
    {
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2019-08-01",
        "name": "CreateVNet",
       
        "dependsOn": [
            "[resourceId('Microsoft.Resources/deployments', 'CreateNSG')]"
        ],
        "properties": {
            "mode": "Incremental",
            "templateLink": {
                "uri": "[variables('vnetTemplateUrl')]",
                "contentVersion":"1.0.0.0"

            
        },
        "parameters": {
            "virtualNetworkName": {
                "value": "[parameters('virtualNetworkName')]"
            },
            "virtualNetworkAddressRange": {
                "value": "[parameters('virtualNetworkAddressRange')]"
            },
            "subnetName": {
                "value": "[parameters('subnetName')]"
            },
            "subnetRange": {
                "value": "[parameters('subnetRange')]"
            },
            "networkSecurityGroupName":{
              "value": "[parameters('networkSecurityGroupName')]"
            },
            "resourceTags":{
              "value": "[parameters('resourceTags')]"
            },
            "location": {
                "value": "[parameters('location')]"
            }
        }
        }
    },
    {
     "type": "Microsoft.Resources/deployments",
        "apiVersion": "2019-08-01",
        "name": "CreateNSG",
        "dependsOn": [
            
        ],
        "properties": {
            "mode": "Incremental",
            "templateLink": {
                "uri":"[variables('nsgTemplateUrl')]",
                "contentVersion":"1.0.0.0"

            
        },
        "parameters": {   
            "networkSecurityGroupName": {
                "value": "[parameters('networkSecurityGroupName')]"
            },
            "location": {
                "value": "[parameters('location')]"
            }
        }
    }
    },
    
    {
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2019-03-01",
        "name": "CreateVM",
        "dependsOn": [
            "[resourceId('Microsoft.Resources/deployments', 'CreateVNet')]"
        ],
        "properties": {
            "mode": "Incremental",
            "templateLink": {
                "uri":"[variables('vmTemplateUrl')]",
                "contentVersion":"1.0.0.0"
            
            
        
        },
        "parameters": {
            "adminUsername": {
                "value": "[parameters('adminUsername')]"
            },
            "adminPassword":{
                "value": "[parameters('adminPassword')]"
            },
            "dnsLabelPrefix": {
                "value": "[parameters('dnsLabelPrefix')]"
            },
            "publicIpName": {
                "value": "[parameters('publicIpName')]"
            },
            "publicIPAllocationMethod": {
                "value": "[parameters('publicIPAllocationMethod')]"
            },
            "publicIpSku": {
                "value": "[parameters('publicIpSku')]"
            },
            "privateIPAddress": {
                "value": "[parameters('privateIPAddress')]"
            },
            "OSVersion": {
                "value": "[parameters('OSVersion')]"
            },
            "vmSize": {
                "value": "[parameters('vmSize')]"
            },
            "location": {
                "value": "[parameters('location')]"
            },
            "vmName": {
                "value": "[parameters('vmName')]"
            },
            
            "subnetRef": {
                "value": "[parameters('subnetRef')]"
            },
            "nicName": {
                "value": "[parameters('nicName')]"
            }
        }
    }
    }

]
}
